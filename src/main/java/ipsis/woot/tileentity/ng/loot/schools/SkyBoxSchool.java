package ipsis.woot.tileentity.ng.loot.schools;

import ipsis.Woot;
import ipsis.woot.manager.EnumEnchantKey;
import ipsis.woot.oss.LogHelper;
import ipsis.woot.tileentity.ng.IFarmSetup;
import ipsis.woot.tileentity.ng.ITickTracker;
import ipsis.woot.tileentity.ng.WootMobName;
import ipsis.woot.tileentity.ng.WootMobNameBuilder;
import ipsis.woot.tileentity.ng.loot.ILootLearner;
import ipsis.woot.util.FakePlayerPool;
import net.minecraft.entity.EntityLiving;
import net.minecraft.util.DamageSource;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.living.LivingDropsEvent;

public class SkyBoxSchool implements ILootLearner {

    /**
     * ILootLearner
     */

    public void tick(ITickTracker tickTracker, World world, BlockPos origin, IFarmSetup farmSetup) {

        // TODO try and pick up any drops from the previous kill

        if (!tickTracker.hasLearnTickExpired())
            return;

        WootMobName wootMobName = farmSetup.getWootMobName();
        EnumEnchantKey key = farmSetup.getEnchantKey();
        if (!Woot.lootRepository.isFull(wootMobName, key)) {
            LogHelper.info("TODO spawn " + wootMobName);
        }

        tickTracker.resetLearnTickCount();
    }

    /**
     * Only learns when it was generated by our farm
     */
    public void onivingDropsEvent(LivingDropsEvent e) {

        if (!(e.getEntity() instanceof EntityLiving))
            return;

        DamageSource damageSource = e.getSource();
        if (damageSource == null)
            return;

        if (!FakePlayerPool.isOurFakePlayer(damageSource.getSourceOfDamage()))
            return;

        // Cancel our fake spawns
        e.setCanceled(true);

        WootMobName wootMobName = WootMobNameBuilder.create((EntityLiving)e.getEntity());
        if (wootMobName.isValid()) {
            EnumEnchantKey key = EnumEnchantKey.getEnchantKey(e.getLootingLevel());
            Woot.lootRepository.insert(wootMobName, key, e.getDrops());
        }
    }
}
